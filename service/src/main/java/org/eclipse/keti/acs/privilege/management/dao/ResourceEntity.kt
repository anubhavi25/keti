/*******************************************************************************
 * Copyright 2017 General Electric Company
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

package org.eclipse.keti.acs.privilege.management.dao

import org.apache.commons.lang.builder.EqualsBuilder
import org.apache.commons.lang.builder.HashCodeBuilder
import org.eclipse.keti.acs.model.Attribute
import org.eclipse.keti.acs.rest.Parent
import org.eclipse.keti.acs.zone.management.dao.ZoneEntity
import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.GeneratedValue
import javax.persistence.GenerationType
import javax.persistence.Id
import javax.persistence.JoinColumn
import javax.persistence.ManyToOne
import javax.persistence.Table
import javax.persistence.Transient
import javax.persistence.UniqueConstraint

@Entity
@Table(
    name = "resource",
    uniqueConstraints = [(UniqueConstraint(columnNames = arrayOf("authorization_zone_id", "resource_identifier")))]
)
class ResourceEntity : ZonableEntity {

    @Id
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    override var id: Long? = null

    @ManyToOne(optional = false)
    @JoinColumn(name = "authorization_zone_id", referencedColumnName = "id", nullable = false, updatable = false)
    override var zone: ZoneEntity? = null

    @Column(name = "resource_identifier", nullable = false)
    var resourceIdentifier: String? = null

    /**
     * Clob representing set of attributes as a JSON body.
     */
    @Column(name = "attributes", columnDefinition = "CLOB NOT NULL")
    override var attributesAsJson = "{}"

    @Transient
    override var attributes: Set<Attribute>? = emptySet()
        set(attributes) {
            field = attributes ?: emptySet()
        }

    @Transient
    override var parents = emptySet<Parent>()

    override val entityId: String?
        get() = this.resourceIdentifier

    override val entityType: String
        get() = "resource"

    /**
     * Note about all these Id's and identifiers:
     *
     * id: surrogate id generated by the rbdms, intended to FK references, etc. resourceIdentifier: The actual
     * resource URI being protected, Ex: /asset/sanramon
     */
    constructor(zone: ZoneEntity, resourceIdentifier: String) {
        this.zone = zone
        this.resourceIdentifier = resourceIdentifier
    }

    constructor() {
        // required for jackson serialization
    }

    override fun toString(): String {
        return ("ResourceEntity [id=" + this.id + ", zone=" + this.zone + ", resourceIdentifier="
                + this.resourceIdentifier + ", attributesAsJson=" + this.attributesAsJson + "]")
    }

    override fun hashCode(): Int {
        return HashCodeBuilder().append(this.resourceIdentifier).append(this.zone).append(this.attributesAsJson)
            .append(this.parents).toHashCode()
    }

    override fun equals(other: Any?): Boolean {
        if (other is ResourceEntity) {
            val that = other as ResourceEntity?
            return EqualsBuilder().append(this.resourceIdentifier, that?.resourceIdentifier)
                .append(this.zone, that?.zone).append(this.attributesAsJson, that?.attributesAsJson)
                .append(this.parents, that?.parents).isEquals
        }
        return false
    }
}
